name: CD

on:
  push:
    branches: master

env:
  RELEASE_BUILD_OUTPUT: 'build/Build/Products/Release'
  DEBUG_BUILD_OUTPUT: 'build/Build/Products/Debug'

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Manage Version
      run: |
        git fetch --prune --unshallow --tags
        GIT_SHA="$(git rev-parse --short HEAD)"
        CUR_TAG="$(git tag -l | grep 'alpha\|beta' | tail -1)"
        eval $(grep -m 1 "MODULE_VERSION =" *.xcodeproj/project.pbxproj | tr -d ';' | tr -d '\t' | tr -d " ")
        echo "SHORT_SHA=$GIT_SHA" >> $GITHUB_ENV
        echo "MODULE_VER=$MODULE_VERSION" >> $GITHUB_ENV
        if [[ -z $CUR_TAG ]]; then
          echo "OLD_PRE_TAG=NULL" >> $GITHUB_ENV
        else
          echo "OLD_PRE_TAG=$CUR_TAG" >> $GITHUB_ENV
        fi
        
    - name: Install MacKernelSDK
      run: |
        git clone --depth=1 https://github.com/CharlieJiangXXX/MacKernelSDK.git
        
    - name: Install Lilu Debug Artifact
      run: |
        LATEST_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/acidanthera/Lilu/releases/latest)
        LATEST_VERSION=$(echo $LATEST_RELEASE | sed -e 's/.*"tag_name":"\([^"]*\)".*/\1/')
        ARTIFACT_NAME="Lilu-$LATEST_VERSION-DEBUG.zip"
        cd $PROJECT_DIR
        curl -LfsO "https://github.com/acidanthera/Lilu/releases/download/$LATEST_VERSION/$ARTIFACT_NAME"
        unzip $ARTIFACT_NAME
        rm $ARTIFACT_NAME
        
    - name: Build Release
      run: |
        xcodebuild -scheme IOBluetoothFixup -configuration Release -derivedDataPath build GIT_COMMIT=_${SHORT_SHA} | xcpretty && exit ${PIPESTATUS[0]}
        
    - name: Build Debug
      run: |
        xcodebuild -scheme IOBluetoothFixup -configuration Debug -derivedDataPath build GIT_COMMIT=_${SHORT_SHA} | xcpretty && exit ${PIPESTATUS[0]}
    
    - name: Pack Release Artifacts
      run: |
        cd $RELEASE_BUILD_OUTPUT
        zip -r IOBluetoothFixup-${MODULE_VER}-RELEASE-alpha-${SHORT_SHA}.zip *.kext *.dSYM
        
    - name: Pack Debug Artifacts
      run: |
        cd $DEBUG_BUILD_OUTPUT
        zip -r IOBluetoothFixup-${MODULE_VER}-DEBUG-alpha-${SHORT_SHA}.zip *.kext
        
    - name: Delete Old Prerelease
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        tag_name: ${{ env.OLD_PRE_TAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish GitHub Release
      uses: ncipollo/release-action@v1.8.6
      with:
        prerelease: true
        artifacts: "${{ env.DEBUG_BUILD_OUTPUT }}/*.zip, ${{ env.RELEASE_BUILD_OUTPUT }}/*.zip"
        tag: "v${{ env.MODULE_VER }}-alpha"
        token: ${{ secrets.GITHUB_TOKEN }}
